openapi: 3.0.3
info:
    title: 'Meu Bazar Online'
    version: '1.0.0'
servers:
    - url: 'http://localhost:8080/api'
paths:
    /user:
        post:
            tags:
                - Usuário
            summary: 'Cadastrar usuário'
            requestBody:
                description: 'Login'
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserWithoutIdType'
            responses:
                '200':
                    description: 'Usuário cadastrado com sucesso'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserType'
                '400':
                    description: 'Erro ao encontrar usuário'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
        put:
            tags:
                - Usuário
            summary: 'Alterar usuário atual'
            security:
                - bearerAuth: []
            requestBody:
                description: 'Login'
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserWithoutIdType'
            responses:
                '200':
                    $ref: '#/components/schemas/UserType'
                '400':
                    description: 'Erro ao encontrar usuário'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
        delete:
            tags:
                - Usuário
            summary: 'Remover usuário atual'
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: 'Usuário excluído com sucesso'
                '400':
                    description: 'Erro ao encontrar usuário'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
    /user/login:
        post:
            tags:
                - Usuário
            summary: 'Realizar login com usuário e senha'
            requestBody:
                description: 'Login'
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginType'
            responses:
                '200':
                    description: 'Usuário validado com sucesso'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TokenType'
                '400':
                    description: 'Erro ao encontrar usuário'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
    /user/me:
        get:
            tags:
                - Usuário
            summary: 'Buscar usuário atual'
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: 'Usuário encontrado com sucesso'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserType'
                '400':
                    description: 'Erro ao encontrar usuário'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
    /customer:
        post:
            tags:
                - Cliente
            summary: 'Cadastrar um cliente'
            security:
                - bearerAuth: []
            requestBody:
                description: 'Login'
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CustomerType'
            responses:
                '200':
                    description: 'Cliente cadastrado com sucesso'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerType'
                '400':
                    description: 'Erro ao cadastrar produto'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
        put:
            tags:
                - Cliente
            summary: 'Alterar um cliente'
            security:
                - bearerAuth: []
            parameters:
                - in: query
                  name: id
                  type: string
                  description: 'ID do cliente a ser alterado'
            requestBody:
                description: 'Cliente'
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CustomerType'
            responses:
                '200':
                    description: 'Cliente alterado com sucesso'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerType'
                '400':
                    description: 'Erro ao alterar produto'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
        delete:
            tags:
                - Cliente
            summary: 'Remover um cliente'
            security:
                - bearerAuth: []
            parameters:
                - in: query
                  name: id
                  type: string
                  description: 'ID do cliente a ser removido'
            responses:
                '200':
                    description: 'Cliente removido com sucesso'
                '400':
                    description: 'Erro ao remover cliente'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
        get:
            tags:
                - Cliente
            summary: 'Buscar todos os clientes'
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: 'Clientes buscados com sucesso'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    $ref: '#/components/schemas/CustomerType'
    /product:
        post:
            tags:
                - Produto
            summary: 'Cadastrar um produto'
            security:
                - bearerAuth: []
            requestBody:
                description: 'Login'
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductOnlyWithIdsType'
            responses:
                '200':
                    description: 'Cliente cadastrado com sucesso'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductType'
                '400':
                    description: 'Erro ao cadastrar produto'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
        put:
            tags:
                - Produto
            summary: 'Alterar um produto'
            security:
                - bearerAuth: []
            parameters:
                - in: query
                  name: id
                  type: string
                  description: 'ID do produto a ser alterado'
            requestBody:
                description: 'Cliente'
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductOnlyWithIdsType'
            responses:
                '200':
                    description: 'Cliente alterado com sucesso'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductType'
                '400':
                    description: 'Erro ao encontrar produto'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
        delete:
            tags:
                - Produto
            summary: 'Remover um produto'
            security:
                - bearerAuth: []
            parameters:
                - in: query
                  name: id
                  type: string
                  description: 'ID do produto a ser removido'
            responses:
                '200':
                    description: 'Cliente removido com sucesso'
                '400':
                    description: 'Erro ao encontrar produto'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorType'
        get:
            tags:
                - Produto
            summary: 'Buscar todos os produtos'
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: 'Produtos buscados com sucesso'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    $ref: '#/components/schemas/ProductType'
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
    schemas:
        LoginType:
            type: object
            properties:
                user_name:
                    type: string
                password:
                    type: string
        TokenType:
            type: object
            properties:
                token:
                    type: string
        ErrorType:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
        AddressType:
            type: object
            properties:
                zip_code:
                    type: string
                street_name:
                    type: string
                street_number:
                    type: string
                complement:
                    type: string
                neighborhood:
                    type: string
                city:
                    type: string
                state:
                    type: string
                country:
                    type: string
        UserType:
            type: object
            properties:
                _id:
                    type: string
                created:
                    type: string
                updated:
                    type: string
                full_name:
                    type: string
                user_name:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                birthday:
                    type: string
                password:
                    type: string
                address:
                    $ref: '#/components/schemas/AddressType'
        UserWithoutIdType:
            type: object
            properties:
                created:
                    type: string
                updated:
                    type: string
                full_name:
                    type: string
                user_name:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                birthday:
                    type: string
                password:
                    type: string
                address:
                    $ref: '#/components/schemas/AddressType'
        CustomerType:
            type: object
            properties:
                _id:
                    type: string
                created:
                    type: string
                updated:
                    type: string
                full_name:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                birthday:
                    type: string
                person_type:
                    type: string
                document_type:
                    type: string
                document_number:
                    type: string
                address:
                    $ref: '#/components/schemas/AddressType'
        ProductType:
            type: object
            properties:
                _id:
                    type: string
                created:
                    type: string
                updated:
                    type: string
                customer:
                    $ref: '#/components/schemas/CustomerType'
                seller:
                    $ref: '#/components/schemas/CustomerType'
                code:
                    type: string
                title:
                    type: string
                description:
                    type: string
                categories:
                    type: string
                price:
                    type: number
                status:
                    type: string
        ProductOnlyWithIdsType:
            type: object
            properties:
                _id:
                    type: string
                created:
                    type: string
                updated:
                    type: string
                customer_id:
                    type: string
                seller_id:
                    type: string
                code:
                    type: string
                title:
                    type: string
                description:
                    type: string
                categories:
                    type: string
                price:
                    type: number
                status:
                    type: string
